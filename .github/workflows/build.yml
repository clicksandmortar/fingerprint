name: Build
on:
  push:
    branches: [main, develop]
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build:fingerprint
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: dist
          path: dist/
          retention-days: 7
      - name: Configure AWS Credentials Staging
        if: github.ref == 'refs/heads/develop'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::228243989488:role/ci/ci-fingerprint-upload
          role-session-name: ci-fingerprint-upload
          aws-region: ${{ vars.AWS_REGION }}
      - name: Staging Deploy
        if: github.ref == 'refs/heads/develop'
        working-directory: ./dist
        run: aws s3 cp . s3://cam-cdn-fingerprint-script-staging-origin/ --recursive --exclude "*" --include="fingerprint.js"
      - name: Configure AWS Credentials Production
        if: github.ref == 'refs/heads/main'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::580831181531:role/ci/ci-fingerprint-upload
          role-session-name: ci-fingerprint-upload
          aws-region: ${{ vars.AWS_REGION }}
      - name: Production Deploy
        if: github.ref == 'refs/heads/main'
        working-directory: ./dist
        run: aws s3 cp . s3://cam-cdn-fingerprint-script-production-origin/ --recursive --exclude "*" --include="fingerprint.js"
